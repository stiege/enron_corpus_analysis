require 'rake'
require 'net/http'

desc 'Get the Enron data set'
task :get_enron_data do
  # None of this script is unit tested (unlike other parts of this rakefile).
  # Be very careful about regressions and be sure to test fully (i.e. by
  # removing wget from PATH and testing from various stages).
  if File.exists?('maildir')
    puts 'maildir already exists'
    puts 'if you wish to recreate it please delete it and try again'
    fail
  else
    unless File.exists?('enron_mail_20150507.tgz')
      sh 'wget http://www.cs.cmu.edu/~./enron/enron_mail_20150507.tgz' do |ok, res|
        unless ok
          puts 'wget not found, using rake to download'
          puts 'this takes about 60 minutes with a good connection and you'
          puts 'will not get a progress bar ...'
          uri = URI('http://www.cs.cmu.edu/~./enron/enron_mail_20150507.tgz')
          data_set = Net::HTTP.get(uri)

          File.open('enron_mail_20150507.tgz', 'wb') do |file|
            file.write(data_set)
          end
        end
      end
    end

    # Using OS rather than ruby to untar; just easier for now.
    sh 'tar -xvf enron_mail_20150507.tgz' do |ok, res|
      unless ok
        puts "Please install command line tar or extract manually"
      end
    end
  end
end

task :clean do
  FileUtils.rm_rf Dir.glob('**/**.pyc')
end

namespace :test do

  _test_command = "-m unittest discover -b"

  desc 'Run unit tests in python 2 and 3'
  task :all => ["test:py2", "test:py3", "test:speed"]

  desc 'Run unit tests in python 2'
  task :py2 do
    sh "python2 " + _test_command
  end

  desc 'Run unit tests in python 3'
  task :py3 do
    sh "python3 " + _test_command
  end

  desc 'Run unit tests in python'
  task :py do
    sh "python " + _test_command
  end

  desc 'Run speed profiling (baseline notes target python 3.5.1)'
  task :speed do
    sh "python " + _test_command + " -p speed_test_*"
  end
end
desc 'Equivalent to test:py'
task :test => ["test:py"]

namespace :db do
  desc 'Create a database'
  task :create, [:path, :config] do |t, args|
    args.with_defaults(
      :path => "core/_test_fixtures",
      :config => "sqlite:///database.db")
    sh "python -m core.enron -c #{args[:path]} -d #{args[:config]}"
  end
end

namespace :doc do
  desc 'Build documentation'
  task :make, [:type] do |t, args|
    sh "make -C doc #{args[:type]}"
  end
end
desc 'Equivalent to doc:make[help]'
task :doc do
  Rake::Task["doc:make"].invoke "help"
end
